


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: Mina Gawargious and Isaac Feldman
    3 00000000         ; TA: Austin Harris
    4 00000000         ; Date Created: 2/4/2017
    5 00000000         ; Last Modified: 2/12/2018
    6 00000000         ; Brief description of the program
    7 00000000         ;   The LED toggles at 8 Hz and a varying duty-cycle
    8 00000000         ; Hardware connections (External: One button and one LED
                       )
    9 00000000         ;   PE1 is Button input  (1 means pressed, 0 means not p
                       ressed)
   10 00000000         ;   PE0 is LED output (1 activates external LED on proto
                       board)
   11 00000000         ;   PF4 is builtin button SW1 on Launchpad (Internal) 
   12 00000000         ;    Negative Logic (0 means pressed, 1 means not presse
                       d)
   13 00000000         ; Overall functionality of this system is to operate lik
                       e this
   14 00000000         ;   1) Make PE0 an output and make PE1 and PF4 inputs.
   15 00000000         ;   2) The system starts with the the LED toggling at 8H
                       z,
   16 00000000         ;      which is 8 times per second with a duty-cycle of 
                       20%.
   17 00000000         ;      Therefore, the LED is ON for (0.2*1/8)th of a sec
                       ond
   18 00000000         ;      and OFF for (0.8*1/8)th of a second.
   19 00000000         ;   3) When the button on (PE1) is pressed-and-released 
                       increase
   20 00000000         ;      the duty cycle by 20% (modulo 100%). Therefore fo
                       r each
   21 00000000         ;      press-and-release the duty cycle changes from 20%
                        to 40% to 60%
   22 00000000         ;      to 80% to 100%(ON) to 0%(Off) to 20% to 40% so on
                       
   23 00000000         ;   4) Implement a "breathing LED" when SW1 (PF4) on the
                        Launchpad is pressed:
   24 00000000         ;      a) Be creative and play around with what "breathi
                       ng" means.
   25 00000000         ;         An example of "breathing" is most computers po
                       wer LED in sleep mode
   26 00000000         ;         (e.g., https://www.youtube.com/watch?v=ZT6siXy
                       IjvQ).
   27 00000000         ;      b) When (PF4) is released while in breathing mode
                       , resume blinking at 8Hz.
   28 00000000         ;         The duty cycle can either match the most recen
                       t duty-
   29 00000000         ;         cycle or reset to 20%.
   30 00000000         ;      TIP: debugging the breathing LED algorithm and fe
                       el on the simulator is impossible.
   31 00000000         
   32 00000000         ; PortE device registers
   33 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   34 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   35 00000000 40024420 
                       GPIO_PORTE_AFSEL_R



ARM Macro Assembler    Page 2 


                               EQU              0x40024420
   36 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   37 00000000         ; PortF device registers
   38 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   39 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   40 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   41 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   42 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   43 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   44 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   45 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; unlocks the GPIO_
                                                            CR register
   46 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   47 00000000         
   48 00000000 01312D00 
                       TotalDelay
                               EQU              20000000    ; the number of del
                                                            ay loops per second
                                                             in simulation
   49 00000000 00000050 
                       breatheFrequency
                               EQU              80          ; the frequency at 
                                                            which to breathe
   50 00000000 00000005 
                       breatheIncrement
                               EQU              5           ; the duty cycle pe
                                                            rcentage change
   51 00000000        0 
                       Direction
                               RN               0
   52 00000000        2 
                       DutyCycle
                               RN               2
   53 00000000        3 
                       Frequency
                               RN               3
   54 00000000         
   55 00000000                 IMPORT           TExaS_Init
   56 00000000                 THUMB



ARM Macro Assembler    Page 3 


   57 00000000                 AREA             DATA, ALIGN=2
   58 00000000         ;global variables go here
   59 00000000         
   60 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   61 00000000                 THUMB
   62 00000000                 EXPORT           Start
   63 00000000         Start
   64 00000000         ; TExaS_Init sets bus clock at 80 MHz
   65 00000000 F7FF FFFE       BL               TExaS_Init  ; voltmeter, scope 
                                                            on PD3
   66 00000004         ; Initialization goes here
   67 00000004 484E            LDR              R0, =SYSCTL_RCGCGPIO_R ; start 
                                                            the clock for PE, P
                                                            F
   68 00000006 6801            LDR              R1, [R0]
   69 00000008 F041 0130       ORR              R1, R1, #0x30
   70 0000000C 6001            STR              R1, [R0]
   71 0000000E BF00            NOP
   72 00000010 BF00            NOP
   73 00000012 484C            LDR              R0, =GPIO_PORTE_DEN_R ; digital
                                                             enable for PE0, PE
                                                            1
   74 00000014 6801            LDR              R1, [R0]
   75 00000016 F041 0103       ORR              R1, R1, #0x3
   76 0000001A 6001            STR              R1, [R0]
   77 0000001C 484A            LDR              R0, =GPIO_PORTF_DEN_R ; digital
                                                             enable for PF4
   78 0000001E 6801            LDR              R1, [R0]
   79 00000020 F041 0110       ORR              R1, R1, #0x10
   80 00000024 6001            STR              R1, [R0]
   81 00000026 4849            LDR              R0, =GPIO_PORTE_DIR_R ; PE0 is 
                                                            output, PE1 is inpu
                                                            t
   82 00000028 6801            LDR              R1, [R0]
   83 0000002A F041 0103       ORR              R1, R1, #0x3
   84 0000002E F081 0102       EOR              R1, R1, #0x2
   85 00000032 6001            STR              R1, [R0]
   86 00000034 4846            LDR              R0, =GPIO_PORTF_DIR_R 
                                                            ; PF4 is input
   87 00000036 6801            LDR              R1, [R0]
   88 00000038 F001 01EF       AND              R1, R1, #0xEF
   89 0000003C 6001            STR              R1, [R0]
   90 0000003E 4845            LDR              R0, =GPIO_PORTF_PUR_R ; enable 
                                                            the pull-up resisto
                                                            r for PF4
   91 00000040 6801            LDR              R1, [R0]
   92 00000042 F041 0110       ORR              R1, R1, #0x10
   93 00000046 6001            STR              R1, [R0]
   94 00000048 F04F 0214       MOV              DutyCycle, #20 ; the duty cycle
                                                             starts at 20 perce
                                                            nt
   95 0000004C F04F 0308       MOV              Frequency, #8 ; frequency start
                                                            s at 8 Hz
   96 00000050 B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts  
   97 00000052         
   98 00000052         loop



ARM Macro Assembler    Page 4 


   99 00000052         ; main engine goes here
  100 00000052 F000 F805       BL               toggleLED   ; turn the LED ON
  101 00000056 F000 F835       BL               checkSwitchState
  102 0000005A F000 F84C       BL               Breathe
  103 0000005E E7F8            B                loop
  104 00000060         
  105 00000060         toggleLED                            ; toggles the LED
  106 00000060 B507            PUSH             {R0, R1, R2, LR}
  107 00000062 2A00            CMP              DutyCycle, #0
  108 00000064 D011            BEQ              turnLEDOff
  109 00000066         
  110 00000066         turnLEDOn                            ; turns the LED ON
  111 00000066 483C            LDR              R0, =GPIO_PORTE_DATA_R 
                                                            ; set the LED high
  112 00000068 6801            LDR              R1, [R0]
  113 0000006A F041 0101       ORR              R1, R1, #0x1
  114 0000006E 6001            STR              R1, [R0]
  115 00000070 483A            LDR              R0, =TotalDelay ; find the appr
                                                            opriate count for t
                                                            he ON delay
  116 00000072 FBB0 F0F3       UDIV             R0, Frequency
  117 00000076 FB00 F002       MUL              R0, R0, DutyCycle
  118 0000007A F04F 0164       MOV              R1, #100
  119 0000007E FBB0 F0F1       UDIV             R0, R1
  120 00000082 F000 F819       BL               delay
  121 00000086 2A64            CMP              DutyCycle, #100 ; when the duty
                                                             cycle is at 100 pe
                                                            rcent, do not turn 
                                                            the LED OFF
  122 00000088 D013            BEQ              returnFromToggle
  123 0000008A         
  124 0000008A 4833    turnLEDOff
                               LDR              R0, =GPIO_PORTE_DATA_R
  125 0000008C 6801            LDR              R1, [R0]    ; set the LED low
  126 0000008E F001 01FE       AND              R1, R1, #0xFE
  127 00000092 6001            STR              R1, [R0]
  128 00000094 4831            LDR              R0, =TotalDelay ; find the appr
                                                            opriate count for t
                                                            he OFF delay
  129 00000096 FBB0 F0F3       UDIV             R0, Frequency
  130 0000009A F04F 0164       MOV              R1, #100
  131 0000009E EBA1 0102       SUB              R1, R1, DutyCycle
  132 000000A2 FB00 F001       MUL              R0, R0, R1
  133 000000A6 F04F 0164       MOV              R1, #100
  134 000000AA FBB0 F0F1       UDIV             R0, R1
  135 000000AE F000 F803       BL               delay
  136 000000B2         
  137 000000B2         returnFromToggle
  138 000000B2 E8BD 4007       POP              {R0, R1, R2, LR}
  139 000000B6 4770            BX               LR
  140 000000B8         
  141 000000B8         delay                                ; delay loop. Keeps
                                                             the LED high or lo
                                                            w for a prescribed 
                                                            period
  142 000000B8 B501            PUSH             {R0, LR}
  143 000000BA         subtract
  144 000000BA 1E40            SUBS             R0, R0, #1
  145 000000BC DCFD            BGT              subtract



ARM Macro Assembler    Page 5 


  146 000000BE E8BD 4001       POP              {R0, LR}
  147 000000C2 4770            BX               LR
  148 000000C4         
  149 000000C4         checkSwitchState                     ; checks if PE1 has
                                                             been pressed and r
                                                            eleased. If R4 = 0x
                                                            0 and PE1 = 0x1, PE
                                                            1 has been pressed.
                                                             If R4 = 0x1 and PE
                                                            1 = 0x0, PE1 has be
                                                            en released.
  150 000000C4 B501            PUSH             {R0, LR}
  151 000000C6 4824            LDR              R0, =GPIO_PORTE_DATA_R ; get PE
                                                            1 and put it in the
                                                             least significant 
                                                            bit
  152 000000C8 6800            LDR              R0, [R0]
  153 000000CA F000 0002       AND              R0, R0, #0x2
  154 000000CE EA4F 0050       LSR              R0, #1
  155 000000D2 2C00            CMP              R4, #0x0    ; if R4 = 0x0, move
                                                             R0 to R4
  156 000000D4 D00B            BEQ              ChangeState
  157 000000D6 2800            CMP              R0, #0      ; R4 must be a 1. I
                                                            f R0 = 0x0, PE1 has
                                                             been released
  158 000000D8 D000            BEQ              buttonReleased
  159 000000DA E008            B                ChangeState
  160 000000DC         
  161 000000DC         buttonReleased
  162 000000DC F102 0214       ADD              DutyCycle, DutyCycle, #20
  163 000000E0 2A65            CMP              DutyCycle, #101 ; if DutyCycle 
                                                            is greater than 100
                                                            , set it to 0
  164 000000E2 D202            BHS              SetDutyCycleTo0
  165 000000E4 F7FF FFBC       BL               toggleLED   ; when PE0 is relea
                                                            sed, toggle the LED
                                                            
  166 000000E8 E001            B                ChangeState
  167 000000EA         
  168 000000EA         SetDutyCycleTo0                      ; sets the duty cyc
                                                            le to 0 percent
  169 000000EA F04F 0200       MOV              DutyCycle, #0
  170 000000EE         
  171 000000EE         ChangeState                          ; changes the previ
                                                            ous state of the sw
                                                            itch
  172 000000EE 4604            MOV              R4, R0
  173 000000F0 E8BD 4001       POP              {R0, LR}
  174 000000F4 4770            BX               LR
  175 000000F6         
  176 000000F6         Breathe
  177 000000F6 B50E            PUSH             {R1, R2, R3, LR}
  178 000000F8 F04F 0200       MOV              DutyCycle, #0 ; start breathing
                                                             with a duty cycle 
                                                            of 0 percent
  179 000000FC F04F 0350       LDR              Frequency, =breatheFrequency ; 
                                                            change the frequenc
                                                            y to 80 Hz
  180 00000100 F04F 0000       MOV              Direction, #0x0



ARM Macro Assembler    Page 6 


  181 00000104         
  182 00000104         ButtonCheck
  183 00000104 4916            LDR              R1, =GPIO_PORTF_DATA_R ; get PF
                                                            4 and put it into R
                                                            1
  184 00000106 6809            LDR              R1, [R1]
  185 00000108 F001 0110       AND              R1, R1, #0x10
  186 0000010C 2900            CMP              R1, #0x0    ; if PF4 = 0x1, it 
                                                            is no longer depres
                                                            sed
  187 0000010E D113            BNE              doneBreathing
  188 00000110 2800            CMP              Direction, #0x0 ; PF4 is still 
                                                            depressed, vary the
                                                             duty cycle
  189 00000112 D004            BEQ              ForwardDirection
  190 00000114         
  191 00000114         ReverseDirection                     ; decrement the dut
                                                            y cycle by 5 percen
                                                            t
  192 00000114 F1A2 0205       SUB              DutyCycle, #breatheIncrement
  193 00000118 2A00            CMP              DutyCycle, #0 ; if the duty cyc
                                                            le is at 0 percent,
                                                             set the direction 
                                                            to forwards
  194 0000011A D005            BEQ              SetDirectionToForwards
  195 0000011C E009            B                BreatheAtNewDutyCycle
  196 0000011E         
  197 0000011E         ForwardDirection                     ; increment the dut
                                                            y cycle by 5 percen
                                                            t
  198 0000011E F102 0205       ADD              DutyCycle, #breatheIncrement
  199 00000122 2A64            CMP              DutyCycle, #100 ; if the duty c
                                                            ycle is at 100 perc
                                                            ent, set the direct
                                                            ion to backwards
  200 00000124 D003            BEQ              SetDirectionToBackwards
  201 00000126 E004            B                BreatheAtNewDutyCycle
  202 00000128         
  203 00000128         SetDirectionToForwards               ; changes Direction
                                                             to forwards 
  204 00000128 F04F 0000       MOV              Direction, #0x0
  205 0000012C E001            B                BreatheAtNewDutyCycle
  206 0000012E         
  207 0000012E         SetDirectionToBackwards              ; changes Direction
                                                             to backwards
  208 0000012E F04F 0001       MOV              Direction, #0x1
  209 00000132         
  210 00000132         BreatheAtNewDutyCycle                ; operate at a new 
                                                            duty cycle
  211 00000132 F7FF FF95       BL               toggleLED
  212 00000136 E7E5            B                ButtonCheck
  213 00000138         
  214 00000138         doneBreathing                        ; stops the breathi
                                                            ng subroutines
  215 00000138 E8BD 400E       POP              {R1, R2, R3, LR}
  216 0000013C 4770            BX               LR
  217 0000013E         
  218 0000013E 00 00           ALIGN                        ; make sure the end
                                                             of this section is



ARM Macro Assembler    Page 7 


                                                             aligned
  219 00000140                 END                          ; end of file
              400FE608 
              4002451C 
              4002551C 
              40024400 
              40025400 
              40025510 
              400243FC 
              01312D00 
              400253FC 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Luminary --predefine="__EVAL SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 57 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 60 in file main.s
   Uses
      None
Comment: .text unused
Breathe 000000F6

Symbol: Breathe
   Definitions
      At line 176 in file main.s
   Uses
      At line 102 in file main.s
Comment: Breathe used once
BreatheAtNewDutyCycle 00000132

Symbol: BreatheAtNewDutyCycle
   Definitions
      At line 210 in file main.s
   Uses
      At line 195 in file main.s
      At line 201 in file main.s
      At line 205 in file main.s

ButtonCheck 00000104

Symbol: ButtonCheck
   Definitions
      At line 182 in file main.s
   Uses
      At line 212 in file main.s
Comment: ButtonCheck used once
ChangeState 000000EE

Symbol: ChangeState
   Definitions
      At line 171 in file main.s
   Uses
      At line 156 in file main.s
      At line 159 in file main.s
      At line 166 in file main.s

ForwardDirection 0000011E

Symbol: ForwardDirection
   Definitions
      At line 197 in file main.s
   Uses
      At line 189 in file main.s
Comment: ForwardDirection used once
ReverseDirection 00000114

Symbol: ReverseDirection
   Definitions
      At line 191 in file main.s
   Uses
      None



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: ReverseDirection unused
SetDirectionToBackwards 0000012E

Symbol: SetDirectionToBackwards
   Definitions
      At line 207 in file main.s
   Uses
      At line 200 in file main.s
Comment: SetDirectionToBackwards used once
SetDirectionToForwards 00000128

Symbol: SetDirectionToForwards
   Definitions
      At line 203 in file main.s
   Uses
      At line 194 in file main.s
Comment: SetDirectionToForwards used once
SetDutyCycleTo0 000000EA

Symbol: SetDutyCycleTo0
   Definitions
      At line 168 in file main.s
   Uses
      At line 164 in file main.s
Comment: SetDutyCycleTo0 used once
Start 00000000

Symbol: Start
   Definitions
      At line 63 in file main.s
   Uses
      At line 62 in file main.s
Comment: Start used once
buttonReleased 000000DC

Symbol: buttonReleased
   Definitions
      At line 161 in file main.s
   Uses
      At line 158 in file main.s
Comment: buttonReleased used once
checkSwitchState 000000C4

Symbol: checkSwitchState
   Definitions
      At line 149 in file main.s
   Uses
      At line 101 in file main.s
Comment: checkSwitchState used once
delay 000000B8

Symbol: delay
   Definitions
      At line 141 in file main.s
   Uses
      At line 120 in file main.s
      At line 135 in file main.s

doneBreathing 00000138



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Symbol: doneBreathing
   Definitions
      At line 214 in file main.s
   Uses
      At line 187 in file main.s
Comment: doneBreathing used once
loop 00000052

Symbol: loop
   Definitions
      At line 98 in file main.s
   Uses
      At line 103 in file main.s
Comment: loop used once
returnFromToggle 000000B2

Symbol: returnFromToggle
   Definitions
      At line 137 in file main.s
   Uses
      At line 122 in file main.s
Comment: returnFromToggle used once
subtract 000000BA

Symbol: subtract
   Definitions
      At line 143 in file main.s
   Uses
      At line 145 in file main.s
Comment: subtract used once
toggleLED 00000060

Symbol: toggleLED
   Definitions
      At line 105 in file main.s
   Uses
      At line 100 in file main.s
      At line 165 in file main.s
      At line 211 in file main.s

turnLEDOff 0000008A

Symbol: turnLEDOff
   Definitions
      At line 124 in file main.s
   Uses
      At line 108 in file main.s
Comment: turnLEDOff used once
turnLEDOn 00000066

Symbol: turnLEDOn
   Definitions
      At line 110 in file main.s
   Uses
      None
Comment: turnLEDOn unused
21 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 45 in file main.s
   Uses
      None
Comment: GPIO_LOCK_KEY unused
GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 35 in file main.s
   Uses
      None
Comment: GPIO_PORTE_AFSEL_R unused
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 33 in file main.s
   Uses
      At line 111 in file main.s
      At line 124 in file main.s
      At line 151 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 73 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 81 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 40 in file main.s
   Uses
      None
Comment: GPIO_PORTF_AFSEL_R unused
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 44 in file main.s
   Uses
      None
Comment: GPIO_PORTF_CR_R unused
GPIO_PORTF_DATA_R 400253FC



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 183 in file main.s
Comment: GPIO_PORTF_DATA_R used once
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 42 in file main.s
   Uses
      At line 77 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 86 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 43 in file main.s
   Uses
      None
Comment: GPIO_PORTF_LOCK_R unused
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 41 in file main.s
   Uses
      At line 90 in file main.s
Comment: GPIO_PORTF_PUR_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 46 in file main.s
   Uses
      At line 67 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
TotalDelay 01312D00

Symbol: TotalDelay
   Definitions
      At line 48 in file main.s
   Uses
      At line 115 in file main.s
      At line 128 in file main.s

breatheFrequency 00000050

Symbol: breatheFrequency



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 49 in file main.s
   Uses
      At line 179 in file main.s
Comment: breatheFrequency used once
breatheIncrement 00000005

Symbol: breatheIncrement
   Definitions
      At line 50 in file main.s
   Uses
      At line 192 in file main.s
      At line 198 in file main.s

16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 55 in file main.s
   Uses
      At line 65 in file main.s
Comment: TExaS_Init used once
1 symbol
375 symbols in table
